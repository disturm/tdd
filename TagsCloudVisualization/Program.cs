using NUnit.Framework;

namespace TagsCloudVisualization
{
	class Program
	{
		static void Main(string[] args)
		{
		}
	}

	//Форма итогового облака должна быть близка к кругу с центром в точке center.
		// - заполненность четвертей круга должна быть равномерной - булшит
	//Прямоугольники не должны пересекаться друг с другом.
		// - делаем специальный метод проверки пересечения
	//Облако должно быть плотным, чем плотнее, тем лучше.
		// - площадь, занятая прямоугольниками дожна составлять определенный процент площади описанного круга
	
	//уметь считать площадь, уметь пересекать с другим прямоугольником, возвращать пересекает ли
	
	//Располагать прямоугольники по очереди вдоль достаточно плотной раскручивающейся спирали с центром в точке center.
	//При позиционировании конкретного прямоугольника его можно дополнительно сдвинуть к центру так, чтобы облако тегов уплотнилось.

	//Нужна сортировка по площади! Или хотя бы длине стороны!


	class CircularCloudLayouter
	{
		private readonly Point center;

		CircularCloudLayouter(Point center)
		{
			this.center = center;
		}

		Rectangle PutNextRectangle(Size rectangleSize)
		{
			return default(Rectangle);
		}
	}

	[TestFixture]
	class CircularCloudLayouterSpecification
	{
		//1. в стиле tdd можно написать reactangle
		//2. не добавлено ни одного слова
		//3. добавлено одно слово: левый верний угол совпадает с центром
		//4. добавлено два слова: прямоугольники не пересекаются, у второго есть угол в центре

		//где-то тут должен начаться обман тестов!

		//10. рандомный тест с большим количеством прямоугольников - ничего не пресекается, проверка свойства площади

		//добавлено 4 слова - не пересекаются, у каждого есть угол в центре
		//добавлено 5 слов - из всех точек пересечения - оно берет себе ближнюю, можно поиграться с размерами следующих
	}
}
